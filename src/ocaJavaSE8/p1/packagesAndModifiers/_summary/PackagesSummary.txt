
* Classes and interfaces defined in the same Java source code file can't be
defined in separate packages. Classes and interfaces imported using the import
statement are available to all the classes and interfaces defined in the same
Java source code file.

* The import statement can't be used to import multiple classes or interfaces
with the same name.

NB! * There can be only 1 "public" class within package scope in a file. But you
can have additional INNER classes that are public.

* By default, all classes and interfaces in separate packages and sub-packages
aren't visible to each other.

* All classes and interfaces in the same package are visible to each other.

* An import statement allows the use of simple name for packaged classes and
interfaces defined from different packages.

* An import statement allows the use of simple names for packaged classes and
interfaces defined in other packages.

NB! * You can't import classes from a sub-package by using the wildcard
character, an asteriks (*), in the import statement. So for EVERY SUBPACKAGE
NEW IMPORT is NECESSARY.

NB! * A class from a default package can't be used in any named package class
regardless of whether it's defined within the same directory or not.
