
* An executable Java class is a class that, when handed over to the Java Virtual
Machine (JVM), starts its execution at a particular point in the class. This
point of execution is the main method.

* For a class to be executable, the class should define a main method with the
signature public static void main(String args[]) or public static void
main(String... args). The positions of static and public can be interchanged,
and the method parameter can use any valid name.

* if you try to run java file without exact public static method(String[])
Error will be thrown: Error: Could not find or load main class

* You can have as many different method with the name main as long as they are
with different signature than the pre-defined main method for class execution.

* A class can define multiple methods with the name main, provided that the
signature of these methods doesn’t match the signature of the main method
defined in the previous point. These overloaded versions aren’t considered the
main method.

* When the program is run, the JVM looks for a method named main() which takes
an array of Strings as input and returns nothing (i.e. the return type is void).
But in this case, it doesn't find such a method so it throws a
java.lang.NoSuchMethodError. Note that java.lang.Error does not extend Exception
class. It  extends java.lang.Throwable and so it can be "thrown".

* The main method accepts an array of type String containing the method
parameters passed to it by the JVM.

* The keyword java and the name of the class aren’t passed on as command
parameters to the main method.