
* A class can define multiple components. All the Java components you’ve heard
of can be defined within a Java class: import and package statements, variables,
constructors, methods, comments, nested classes, nested interfaces, annotations,
and enums.

* Comments come in two flavors: multi-line and end-of-line comments.

* Comments are another component of a class. Comments are used to annotate
Java code and can appear at multiple places within a class.

* A comment can appear before or after a package statement, before or after the
class definition, and before, within, or after a method definition.

* Comments can contain any special characters (including characters from the
Unicode charset).

* End-of-line comments start with " // ". The text between // and the end of
the line is treated as a comment.

* Class declarations and class definitions are components of a Java class.

* A Java class may define zero or more instance variables, methods, and
constructors.

* The order of the definition of instance variables, constructors, and methods
doesn’t matter in a class.

* A class may define an instance variable before or after the definition of a
method and still use it.

* A Java source code file (.java file) can define multiple classes and interfaces.

* A public class can be defined only in a source code file with the same name.

* package and import statements apply to all the classes and interfaces defined
in the same source code file (.java file).
