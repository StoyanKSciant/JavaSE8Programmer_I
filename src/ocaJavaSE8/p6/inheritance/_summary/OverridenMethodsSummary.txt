
* Overridden methods are defined by classes and interfaces that share inheritance
relationships.

NB! * variables are SHADOWED and methods are OVERRIDDEN.
 1. Which variable will be
used depends on the class that the variable is declared of.
 2. Which method will be used depends on the actual class of the object that is
 referenced by the variable.

* The name of the overridden method must be the same in both the base class
and the derived class.

* The argument list passed to the overridden method must be the same in both
the base class and derived class.

NB! * The return type of an overriding method in the derived class can be the
same, or a subclass of the return type of the overridden method in the base
class. When the overriding method returns a subclass of the return type of the
overridden method, it is known as a covariant return type.

NB! * Covariant returns are allowed since Java 1.5, which means that an
overriding method can change the return type to a subclass of the return type
declared in the overridden method. But remember than covarient returns does not
apply to primitives

* An overridden method defined in the base class can be an abstract method or
a non-abstract method.

* Access modifiers for an overriding method can be the same or less restrictive
than the method being overridden, but they can’t be more restrictive