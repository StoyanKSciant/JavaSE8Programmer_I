
* Constructors are special methods defined in a class that create and return an
object of the class in which they're defined.

* Constructors habe the same name as the class, and the don't cpecify a return type.

* User-defined constructors are defined by the developer.

* If a class defines multiple initializer blocks, their order of execution depends on
their placement in a class. But all of them execute before a class's constructor.

* Default constructor are defined by Java, but only if the developer doesn't define any
constructor in a class.

* You can define a constructor using the four access levels: public, protected, default
and private.

* Accessibility of a default constructor matches the accessibility of its class. Java
creates a public default constructor for a public class. It creates a default constructor
with package access for a class with package-level access.

* If you define a return type for a constructor, it'll no longer be treated like a
constructor. It'll be treated like a regular method, even though it shares the same name
as its class.